
상어에는 1 이상 M 이하의 자연수 번호가 붙어 있고, 모든 번호는 서로 다르다.
상어들은 영역을 사수하기 위해 다른 상어들을 쫓아내려고 하는데,
1의 번호를 가진 어른 상어는 가장 강력해서 나머지 모두를 쫓아낼 수 있다.

N×N 크기의 격자 중 M개의 칸에 상어가 한 마리씩 들어 있다.



1. 맨 처음에는 모든 상어가 자신의 위치에 자신의 냄새를 뿌린다.
2. 그 후 1초마다 모든 상어가 동시에 상하좌우로 인접한 칸 중 하나로 이동하고,
3. 자신의 냄새를 그 칸에 뿌린다.
4. 냄새는 상어가 k번 이동하고 나면 사라진다.

**반복**
 1. 상어들 위치에서 냄새 뿌리기
    -> 상어번호, k
 
 2. 상어 이동시키기
    -> 상어 이동시키고 position을 확인
    -> 중복 position이 있는가?
    -> 값이 가장 같은 상어 1개만 남고 나머지 다 ㅂㅇㅂㅇ
    ==> 1번 상어 하나만 남으면 반복 end처리
    -> 각 상어 이동 position 먼저 파악, 중복 확인, 이동시킴
 
 3. 반복횟수 누적하기
    -> 1000번째 반복이면 반복 멈추고 return -1
 4. 시간에 따라 냄새 없애기 -> 냄새값을 k로 주자 한 번 반복할 때마다 -1씩

 

각 상어가 이동 방향을 결정할 때는,

1. 먼저 인접한 칸 중 아무 냄새가 없는 칸의 방향으로 잡는다.
2. 그런 칸이 없으면 자신의 냄새가 있는 칸의 방향으로 잡는다.
3. 이때 가능한 칸이 여러 개일 수 있는데, 그 경우에는 특정한 우선순위를 따른다.
3-1. 우선순위는 상어마다 다를 수 있고,
3-2. 같은 상어라도 현재 상어가 보고 있는 방향에 따라 또 다를 수 있다.
--> 모든 상어는 보고있는 방향에 따른 이동 우선순위가 있음
--> 방향 d[보는방향][0~3우선순위에 따라]


상어 좌표, 상어 방향(마지막 이동 방향으로 변경됨)
상어가 맨 처음에 보고 있는 방향은 입력으로 주어지고,
그 후에는 방금 이동한 방향이 보고 있는 방향이 된다.


모든 상어가 이동한 후
한 칸에 여러 마리의 상어가 남아 있으면,
-> 상어 이동시키고 position을 확인
-> 중복 position이 있는가?

가장 작은 번호를 가진 상어를 제외하고
모두 격자 밖으로 쫓겨난다.
-> 값이 가장 같은 상어 1개만 남고 나머지 다 ㅂㅇㅂㅇ


--> 이렇게해서 가장 강한 1번 상어만 남을 때 까지 걸리는 시간은?
반복 횟수가 누적 값
---> 그런데 1000초가 넘어도 다른 상어가 있다? -1 return

